
buildscript {
    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:0.14.451'
    }
}

plugins {
    id 'org.jetbrains.intellij' version "0.0.25"
}

repositories {
    mavenCentral()
}

version = "${version}.$buildNumber"

configurations {
    gen
}

allprojects {

    dependencies {
        compile 'junit:junit:4.+'
        compile 'org.jetbrains.kotlin:kotlin-stdlib:0.14.451'

        compile files('gen') {
            builtBy 'generate'
        }
    }

    apply plugin: 'java'

    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

    apply plugin: 'kotlin'

    apply plugin: 'org.jetbrains.intellij'

    intellij {
        version ideaVersion

        pluginName 'Rust'

        downloadSources Boolean.valueOf('downloadSources')

        // publish { /* ... */ }

    }

    sourceSets {
        main {
            java.srcDirs        'src', 'gen'
            kotlin.srcDirs      'src'

            resources.srcDirs   'resources'
        }

        test {
            java.srcDirs        'test'
            kotlin.srcDirs      'test'

            resources.srcDirs   'testData'
        }
    }

}

apply plugin: 'idea'

idea {
    project {
        jdkName         = javaVersion
        languageLevel   = javaVersion
    }

    module {
        generatedSourceDirs += file('gen')
    }
}

test {
    useJUnit { }
    testLogging {
        exceptionFormat = 'full'
    }
}


dependencies {
    //jflex   'de.jflex:jflex:1.6.0'
    gen files('lib/jflex.jar')
    gen files('lib/grammar-kit-patched.jar')
}


def jflexArgs(srcFlex, targetDir) {
    return [    "--skel",   "src/org/rust/lang/core/lexer/RustLexer.skeleton",
                "-d",       targetDir,
                srcFlex
    ]
}


task generateRustLexer(type: JavaExec) {
    main = "jflex.Main"
    args = jflexArgs("src/org/rust/lang/core/lexer/RustLexer.flex", "gen/org/rust/lang/core/lexer/")

    classpath configurations.gen
}

task generateTomlLexer(type: JavaExec) {
    main = "jflex.Main"
    args = jflexArgs("src/org/toml/lang/core/lexer/TomlLexer.flex", "gen/org/toml/lang/core/lexer/")

    classpath configurations.gen
}

task generateRustPsiAndParser(type: JavaExec) {
    main = "org.intellij.grammar.Main"
    args = [ "gen", "src/org/rust/lang/core/grammar/rust.bnf" ]

    classpath configurations.gen
}

task generateTomlPsiAndParser(type: JavaExec) {
    main = "org.intellij.grammar.Main"
    args = [ "gen", "src/org/toml/lang/core/grammar/toml.bnf" ]

    classpath configurations.gen
}

task generateLexers {
    dependsOn generateRustLexer, generateTomlLexer
}

task generateParsers {
    dependsOn generateRustPsiAndParser, generateTomlPsiAndParser
}

task generate {
    dependsOn generateLexers, generateParsers
}
